name: Tests

on:
  push:
    branches:
    - main
    - develop
  pull_request:
    branches:
    - main
    - develop

  workflow_dispatch:

jobs:
  build_and_test:
    if: contains(toJson(github.event.commits), '***NO_CI***') == false && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false
    name: Test library with backend ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # show all errors for each platform (vs. cancel jobs on error)
      matrix:
        include:
        - name: "Eigen"
          backend: "-DRTNEURAL_EIGEN=ON"
        - name: "STL"
          backend: "-DRTNEURAL_STL=ON"

    
    steps:
    # - name: Install Linux Deps
    #   if: runner.os == 'Linux'
    #   run: |
    #     sudo apt-get update
    #     sudo apt install libasound2-dev libcurl4-openssl-dev libx11-dev libxinerama-dev libxext-dev libfreetype6-dev libwebkit2gtk-4.0-dev libglu1-mesa-dev
    #     sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 9
    #     sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 9

    - name: Get latest CMake
      uses: lukka/get-cmake@latest

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true

    # - name: Setup debug session
    #   uses: mxschmitt/action-tmate@v3

    - name: Configure
      env:
        BACKEND_ARG: ${{ matrix.backend }}
      shell: bash
      run: cmake -Bbuild -DBUILD_TESTS=ON $BACKEND_ARG

    - name: Build
      shell: bash
      run: cmake --build build --config Release --parallel

    - name: Test
      run: ./build/rtneural_tests all
